---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: add-changed-files-listener
spec:
  triggers:
    - name: add-changed-files-listener
      interceptors:
        - ref:
            name: add-changed-files
          params:
            - name: "secretRef"
              value:
                secretName: github-secret
                secretKey: secretToken
        - ref:
            name: cel
          params:
          - name: filter
            value: extensions.changed_files.Files.matches('terraform/envs/')
      bindings:
        - ref: add-changed-files-pr-binding
      template:
        ref: add-changed-files-template
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            serviceAccountName: tekton-triggers-example-sa
            containers:
              - resources:
                  requests:
                    memory: "64Mi"
                    cpu: "250m"
                  limits:
                    memory: "128Mi"
                    cpu: "500m"
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: add-changed-files-pr-binding
spec:
  params:
    - name: gitrepositoryurl
      value: $(body.repository.clone_url)
    - name: changedfiles
      value: $(extensions.changed_files.Files)
    - name: gitevent
      value: $(header.X-GitHub-Event)
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: add-changed-files-template
spec:
  params:
    - name: gitrepositoryurl
    - name: changedfiles
    - name: gitevent
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: TaskRun
      metadata:
        generateName: add-changed-files-run-
      spec:
        taskSpec:
          steps:
            - name: display
              image: ubuntu
              # image: registry.ford.com/kcloutie/pwsh-utility@sha256:b50f08aa77bd0c9a6c9a481b5dc2c16a4dbd58da8509b25ae6444066da5676fd
              script: |
                #! /bin/bash
                echo ""
                echo "Git Event: $(tt.params.gitevent)"
                echo ""
                echo "Repository Url: $(tt.params.gitrepositoryurl)"
                echo ""
                echo "Changed Files: $(tt.params.changedfiles)"
                echo ""
                while IFS=',' read -ra FILENAME; do
                  for i in "${FILENAME[@]}"; do
                    echo "$i"
                  done
                done <<< "$(tt.params.changedfiles)"
                #!/bin/env pwsh

                # param (
                #   $REPOSITORY_URL = "$(tt.params.gitrepositoryurl)",
                #   $CHANGED_FILES = "$(tt.params.changedfiles)",
                #   $GIT_EVENT = "$(tt.params.gitevent)"
                # )

                # Write-Output "GIT_EVENT: $GIT_EVENT"
                # Write-Output ""
                # Write-Output "REPOSITORY_URL: $REPOSITORY_URL"
                # Write-Output ""
                # Write-Output "CHANGED_FILES (String): $CHANGED_FILES"
                # Write-Output ""

                # Write-Output "CHANGED_FILES (Array):"
                # $CHANGED_FILES -split "," | ForEach-Object { 
                #   Write-Output $_
                # }
